<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>二分查找 on 山河一统</title>
    <link>https://lihd2199.github.io/tags/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link>
    <description>Recent content in 二分查找 on 山河一统</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>lihongda</copyright>
    <lastBuildDate>Tue, 07 Sep 2021 10:26:41 +0800</lastBuildDate><atom:link href="https://lihd2199.github.io/tags/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>704-二分查找</title>
      <link>https://lihd2199.github.io/post/leetcode/704/</link>
      <pubDate>Tue, 07 Sep 2021 10:26:41 +0800</pubDate>
      
      <guid>https://lihd2199.github.io/post/leetcode/704/</guid>
      <description>704. 二分查找 - 力扣（LeetCode） (leetcode-cn.com) 两种解题方案： 一、循环 public int search(int[] nums, int target) { int low = 0, high = nums.length - 1; while (low &amp;lt;= high) { int min = (high + low) / 2; if (nums[min] == target) { return min; } else if (target</description>
    </item>
    
  </channel>
</rss>
